name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt  # Ensure path is correct

      - name: Run Tests
        run: |
          pytest src/  # Ensure tests exist inside `src/`

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run SonarQube Scan
        env:
          SONAR_HOST_URL: "http://localhost:9000"  # Ensure this is accessible
          SONAR_LOGIN: ${{ secrets.SONARQUBE_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=my-flask-app \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_LOGIN

  docker-build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: sonarqube
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t maryann123456789/my-flask-app:latest ./src  # Replace with your Docker Hub username
          docker tag maryann123456789/my-flask-app:latest maryann123456789/my-flask-app:${{ github.sha }}  # Versioning

      - name: Push Docker Image
        run: |
          docker push maryann123456789/my-flask-app:latest
          docker push maryann123456789/my-flask-app:${{ github.sha }}

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml


  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure Kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
